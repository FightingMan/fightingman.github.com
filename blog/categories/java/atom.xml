<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | FightingMan's FootPrints]]></title>
  <link href="http://FightingMan.github.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://FightingMan.github.com/"/>
  <updated>2013-10-22T12:13:14+08:00</updated>
  <id>http://FightingMan.github.com/</id>
  <author>
    <name><![CDATA[FightingMan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[An Interesting Thing Occurs While a Class Inside Interface]]></title>
    <link href="http://FightingMan.github.com/blog/2012/12/08/an-interesting-thing-occurs-while-a-class-inside-interface/"/>
    <updated>2012-12-08T22:08:00+08:00</updated>
    <id>http://FightingMan.github.com/blog/2012/12/08/an-interesting-thing-occurs-while-a-class-inside-interface</id>
    <content type="html"><![CDATA[<p>While Iâ€™m putting class inside interface with anonymous,something interested occurs.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>As21.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">interface</span> <span class="nc">Comm</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">Inner</span> <span class="kd">implements</span> <span class="n">Comm</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">(</span><span class="n">Comm</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">c</span><span class="o">.</span><span class="na">v</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">v</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">v</span><span class="o">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">interface</span> <span class="nc">Diff</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">Differ</span> <span class="kd">implements</span> <span class="n">Comm</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">g</span><span class="o">(</span><span class="n">Comm</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">c</span><span class="o">.</span><span class="na">v</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">v</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">As21</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Comm</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Comm</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">v</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;as21&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">Comm</span><span class="o">.</span><span class="na">Inner</span><span class="o">.</span><span class="na">f</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">As22</span> <span class="kd">implements</span> <span class="n">Comm</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">v</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;as22&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">As22</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">As22</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Inner</span><span class="o">.</span><span class="na">f</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Diff</span><span class="o">.</span><span class="na">Differ</span><span class="o">.</span><span class="na">g</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As you can see,As21 is the one which I wantted,but the interesting thing occurs in As22. First,any class you put inside an interface is automatically public and static. Then As22 implements the Comm interface so it can call f() method directly with using Inner.f() witout Comm in front of it, but the method f() in Diff interface cannot called directly,must use Diff.differ.f().</p>

<p>In addition,how to execute the program in command line while put classes inside interfaces?</p>

<p>e.g.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>As20.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">interface</span> <span class="nc">As20</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">Inner</span> <span class="kd">implements</span> <span class="n">As20</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;test&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Inner</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Inner</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p>javac As20.java</p>

<p>java As20\$Inner</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic syntax of inner class]]></title>
    <link href="http://FightingMan.github.com/blog/2012/11/27/basic-snytax-of-inner-class/"/>
    <updated>2012-11-27T23:02:00+08:00</updated>
    <id>http://FightingMan.github.com/blog/2012/11/27/basic-snytax-of-inner-class</id>
    <content type="html"><![CDATA[<p>Place a class definition within another class definition that is called an inner class.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Outer.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Outer</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;outer&#39;s f()&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">Inner</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Outer</span> <span class="nf">outer</span><span class="o">()</span> <span class="o">{</span> <span class="c1">//!cannot with static</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Outer</span><span class="o">.</span><span class="na">this</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Outer</span> <span class="nf">outer</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span> <span class="c1">//!cannot with static</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">Outer</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;inner&#39;s f()&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Inner</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">Inner</span> <span class="nf">inner</span><span class="o">()</span> <span class="o">{</span> <span class="c1">//!cannot with static</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">Inner</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>InnerClass.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">InnerClass</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//! Outer.Inner in = new Inner();</span>
</span><span class='line'>    <span class="c1">//! Outer.Inner in = new Outer.Inner();</span>
</span><span class='line'>    <span class="n">Outer</span> <span class="n">outa</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Outer</span><span class="o">();</span>
</span><span class='line'>    <span class="n">outa</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">ina</span> <span class="o">=</span> <span class="n">outa</span><span class="o">.</span><span class="na">inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">inb</span> <span class="o">=</span> <span class="n">outa</span><span class="o">.</span><span class="na">new</span> <span class="n">Inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ina</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inb</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ina</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inb</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span> <span class="n">outb</span> <span class="o">=</span> <span class="n">ina</span><span class="o">.</span><span class="na">outer</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Outer</span> <span class="n">outc</span> <span class="o">=</span> <span class="n">inb</span><span class="o">.</span><span class="na">outer</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="n">outb</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">outc</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">inc</span> <span class="o">=</span> <span class="n">outb</span><span class="o">.</span><span class="na">inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">ind</span> <span class="o">=</span> <span class="n">outb</span><span class="o">.</span><span class="na">new</span> <span class="n">Inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">ine</span> <span class="o">=</span> <span class="n">outc</span><span class="o">.</span><span class="na">inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Outer</span><span class="o">.</span><span class="na">Inner</span> <span class="n">inf</span> <span class="o">=</span> <span class="n">outc</span><span class="o">.</span><span class="na">new</span> <span class="n">Inner</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inc</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ind</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inc</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ind</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ine</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inf</span><span class="o">.</span><span class="na">outer</span><span class="o">().</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ine</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'>    <span class="n">inf</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span><span class="c1">//output:</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="mi">10</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">outer</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span><span class='line'><span class="n">inner</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">f</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
You can make an object of the inner class anywhere except from within a no-static method of the outer class(if u don't use .new). Inner class has access rights to all the elements in the enclosing class.
Notice: If you make a static inner class(called nested class), then it doesn't need a reference to the outer-class object.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nesting interfaces]]></title>
    <link href="http://FightingMan.github.com/blog/2012/11/23/nesting-interfaces/"/>
    <updated>2012-11-23T01:27:00+08:00</updated>
    <id>http://FightingMan.github.com/blog/2012/11/23/nesting-interfaces</id>
    <content type="html"><![CDATA[<p>These features may seem like they are added strictly for syntactic consistency,maybe I will use it sometime :).
There are 5 Rules:</p>

<blockquote><ol>
<li>Nesting an interface within a class,these can have public package-access protected private visibility.</li>
<li>Nesting an interface within an interface they just have public or package-access visibility but all the elements must be public because an interface nested with another interface is automatically public(whether you specify it).</li>
<li>Nesting an interface within a class with any visibility,it can also be implemented any visibility.And if you implements a private interface with any visibility it can only be used as itself.It also means without allowing any upcasting.</li>
<li>The only thing that works is if the return value is handed to an object that has permission to use it.</li>
<li>When you implement an interface, you are not required to implemtns any interface nested within.</li>
</ol>
</blockquote>

<p>Let me show the codes:</p>

<!--more-->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>NestingInterfaces.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">A</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">interface</span> <span class="nc">B</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BImp</span> <span class="kd">implements</span> <span class="n">B</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">BImp2</span> <span class="kd">implements</span> <span class="n">B</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">C</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">CImp</span> <span class="kd">implements</span> <span class="n">C</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">CImp2</span> <span class="kd">implements</span> <span class="n">C</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">interface</span> <span class="nc">D</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">class</span> <span class="nc">DImp</span> <span class="kd">implements</span> <span class="n">D</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DImp2</span> <span class="kd">implements</span> <span class="n">D</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="n">D</span> <span class="nf">getD</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="k">new</span> <span class="n">DImp2</span><span class="o">();</span> <span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="n">D</span> <span class="n">dRef</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">receiveD</span><span class="o">(</span><span class="n">D</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">dRef</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
</span><span class='line'>    <span class="n">dRef</span><span class="o">.</span><span class="na">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">interface</span> <span class="nc">E</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">interface</span> <span class="nc">G</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// Redundant &quot;public&quot;:</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">H</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">f</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">g</span><span class="o">();</span>
</span><span class='line'><span class="c1">// Cannot be private within an interface:</span>
</span><span class='line'><span class="c1">//! private interface I {}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NestingInterfaces</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BImp</span> <span class="kd">implements</span> <span class="n">A</span><span class="o">.</span><span class="na">B</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">CImp</span> <span class="kd">implements</span> <span class="n">A</span><span class="o">.</span><span class="na">C</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// Cannot implement a private interface except</span>
</span><span class='line'><span class="c1">// within that interfaceâ€™s defining class:</span>
</span><span class='line'><span class="c1">//! class DImp implements A.D {</span>
</span><span class='line'><span class="c1">//! public void f() {}</span>
</span><span class='line'><span class="c1">//! }</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">EImp</span> <span class="kd">implements</span> <span class="n">E</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">g</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">EGImp</span> <span class="kd">implements</span> <span class="n">E</span><span class="o">.</span><span class="na">G</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">EImp2</span> <span class="kd">implements</span> <span class="n">E</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">g</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">EG</span> <span class="kd">implements</span> <span class="n">E</span><span class="o">.</span><span class="na">G</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">f</span><span class="o">()</span> <span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">A</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">A</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">// Canâ€™t access A.D:</span>
</span><span class='line'>    <span class="c1">//! A.D ad = a.getD();</span>
</span><span class='line'>    <span class="c1">// Doesnâ€™t return anything but A.D:</span>
</span><span class='line'>    <span class="c1">//! A.DImp2 di2 = a.getD();</span>
</span><span class='line'>    <span class="c1">// Cannot access a member of the interface:</span>
</span><span class='line'>    <span class="c1">//! a.getD().f();</span>
</span><span class='line'>    <span class="c1">// Only another A can do anything with getD():</span>
</span><span class='line'>    <span class="n">A</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">A</span><span class="o">();</span>
</span><span class='line'>    <span class="n">a2</span><span class="o">.</span><span class="na">receiveD</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">getD</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span><span class='line'> <span class="c1">///:~</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fields in interface]]></title>
    <link href="http://FightingMan.github.com/blog/2012/11/23/fields-in-interface/"/>
    <updated>2012-11-23T01:20:00+08:00</updated>
    <id>http://FightingMan.github.com/blog/2012/11/23/fields-in-interface</id>
    <content type="html"><![CDATA[<p>Fields in interface are automatically static and final,which means the interface is a convenient tool for creating groups of constant value.
Since the fields are static,they are initialized when the class is first loaded,which happens when any of the fields are accessed for the first time.The fields,of course,are not part of the interface.The values are stored in the static storage area for that interface.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Strategy & Factory design pattern with interface]]></title>
    <link href="http://FightingMan.github.com/blog/2012/11/23/strategy-and-factory-design-patter-with-interface/"/>
    <updated>2012-11-23T00:39:00+08:00</updated>
    <id>http://FightingMan.github.com/blog/2012/11/23/strategy-and-factory-design-patter-with-interface</id>
    <content type="html"><![CDATA[<p>Strategy design pattern</p>

<blockquote><p>When you write a method that performs certain operations,and that method takes an interface which you also specify,then the others can use this method with any object,as long as their object conforms to the interface.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>RandomWords.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.nio.</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RandomWords</span> <span class="kd">implements</span> <span class="n">Readable</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="n">Random</span> <span class="n">rand</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">(</span><span class="mi">47</span><span class="o">);</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span><span class="o">[]</span> <span class="n">capitals</span> <span class="o">=</span> <span class="s">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span><span class="o">[]</span> <span class="n">lowers</span> <span class="o">=</span> <span class="s">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span><span class="o">[]</span> <span class="n">vowels</span> <span class="o">=</span> <span class="s">&quot;aeiou&quot;</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">RandomWords</span><span class="o">(</span><span class="kt">int</span> <span class="n">count</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">int</span> <span class="nf">read</span><span class="o">(</span><span class="n">CharBuffer</span> <span class="n">cb</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span><span class="o">(</span><span class="n">count</span><span class="o">--</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="n">cb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">capitals</span><span class="o">[</span><span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">capitals</span><span class="o">.</span><span class="na">length</span><span class="o">)]);</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="mi">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">cb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">lowers</span><span class="o">[</span><span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">lowers</span><span class="o">.</span><span class="na">length</span><span class="o">)]);</span>
</span><span class='line'>        <span class="n">cb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">vowels</span><span class="o">[</span><span class="n">rand</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">vowels</span><span class="o">.</span><span class="na">length</span><span class="o">)]);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">cb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;|&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">cb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Scanner</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="k">new</span> <span class="n">RandomWords</span><span class="o">(</span><span class="mi">10</span><span class="o">));</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">next</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<!--more-->


<p>Factory design pattern</p>

<blockquote><p>Instead of calling a constructor directly, you call a creation method on a factory object which produces an implementation of the interface-this way,in theory,your code is completely isolated from the implementation of the interface,thus making it possible to transparently swap one implementation for another.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Decisions.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
</span><span class='line'><span class="kd">interface</span> <span class="nc">Decision</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">toss</span><span class="o">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">interface</span> <span class="nc">DecisionFactory</span><span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">Decision</span> <span class="n">getDecision</span><span class="o">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">Coin</span> <span class="kd">implements</span> <span class="n">Decision</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">point</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">().</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">6</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">toss</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Coin point = &quot;</span> <span class="o">+</span> <span class="n">point</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">CoinFactory</span> <span class="kd">implements</span> <span class="n">DecisionFactory</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">Decision</span> <span class="n">getDecision</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">Coin</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">Dice</span> <span class="kd">implements</span> <span class="n">Decision</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;head&quot;</span><span class="o">,</span><span class="s">&quot;flower&quot;</span><span class="o">};</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">point</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">().</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">toss</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Dice point &quot;</span> <span class="o">+</span> <span class="n">s</span><span class="o">[</span><span class="n">point</span><span class="o">]);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">class</span> <span class="nc">DiceFactory</span> <span class="kd">implements</span> <span class="n">DecisionFactory</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">Decision</span> <span class="n">getDecision</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nf">Dice</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Decisions</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="n">doToss</span><span class="o">(</span><span class="n">DecisionFactory</span> <span class="n">factory</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Decision</span> <span class="n">d</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">getDecision</span><span class="o">();</span>
</span><span class='line'>    <span class="n">d</span><span class="o">.</span><span class="na">toss</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">doToss</span><span class="o">(</span><span class="k">new</span> <span class="n">CoinFactory</span><span class="o">());</span>
</span><span class='line'>    <span class="n">doToss</span><span class="o">(</span><span class="k">new</span> <span class="n">DiceFactory</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
